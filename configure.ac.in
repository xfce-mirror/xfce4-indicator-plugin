dnl xfce4-indicator-plugin - A indicator plugin for the Xfce panel
dnl
dnl 2009 Mark Trompell <mark@foresightlinux.org>
dnl

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([indicator_version_major], [2])
m4_define([indicator_version_minor], [3])
m4_define([indicator_version_micro], [4])
m4_define([indicator_version_nano],  []) dnl leave this empty to have no nano version
m4_define([indicator_version_build], [@REVISION@])
m4_define([indicator_version_tag],   [git])
m4_define([indicator_version], [indicator_version_major().indicator_version_minor().indicator_version_micro()ifelse(indicator_version_nano(), [], [], [.indicator_version_nano()])ifelse(indicator_version_tag(), [git], [indicator_version_tag()-indicator_version_build()], [indicator_version_tag()])])

dnl ***************************
dnl *** Initialize autoconf ***
dnl ***************************
AC_COPYRIGHT([Copyright (c) 2006-2007
        The Xfce development team. All rights reserved.])
AC_INIT([xfce4-indicator-plugin], [indicator_version], [https://bugzilla.xfce.org/], [xfce4-indicator-plugin])
AC_PREREQ([2.50])
AC_CONFIG_HEADERS([config.h])
AC_CANONICAL_TARGET()
AC_REVISION([@REVISION@])

dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar no-dist-gzip foreign])
AM_MAINTAINER_MODE()
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AC_PROG_LD()
AC_PROG_INSTALL()
IT_PROG_INTLTOOL([0.35.0])
LT_PREREQ([2.2.6])
LT_INIT([disable-static])

dnl **************************
dnl *** Initialize libtool ***
dnl **************************
LT_PREREQ([2.2.6])
LT_INIT([disable-static])

dnl **********************************
dnl *** Check for standard headers ***
dnl **********************************
AC_CHECK_HEADERS([math.h memory.h stdlib.h string.h sys/stat.h \
                  sys/time.h time.h])

dnl ************************************
dnl *** Check for standard functions ***
dnl ************************************
AC_CHECK_FUNCS([])

dnl ******************************
dnl *** Check for i18n support ***
dnl ******************************
XDT_I18N([@LINGUAS@])

dnl *******************************
dnl *** Check for X11 installed ***
dnl *******************************
XDT_CHECK_LIBX11_REQUIRE()

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************
m4_define([libxfce4panel_version_api], [2.0])
LIBXFCE4PANEL_VERSION_API=libxfce4panel_version_api()
AC_DEFINE([LIBXFCE4PANEL_VERSION_API], "libxfce4panel_version_api()", [libxfce4panel api version])
AC_SUBST([LIBXFCE4PANEL_VERSION_API])

XDT_CHECK_PACKAGE([GTK], [gtk+-3.0], [3.18.0])
dnl XDT_CHECK_PACKAGE([EXO], [exo-1], [0.6.0])
XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.9.0])
XDT_CHECK_PACKAGE([LIBXFCE4UI], [libxfce4ui-2], [4.11.0])
XDT_CHECK_PACKAGE([LIBXFCE4PANEL], [libxfce4panel-${LIBXFCE4PANEL_VERSION_API}], [4.11.0])
XDT_CHECK_PACKAGE([XFCONF], [libxfconf-0], [4.13.0],,[
        AC_DEFINE([XFCONF_LEGACY], [], [Use dbus-glib provided by xfconf 4.12 to obtain array type])
        XDT_CHECK_PACKAGE([XFCONF], [libxfconf-0], [4.6.0])
])
INDICATOR_PKGNAME=indicator3-0.4
XDT_CHECK_PACKAGE([INDICATOR], [${INDICATOR_PKGNAME}], [12.10.1])

dnl ********************************************************************
dnl *** Check if libindicator has indicator-ng.h headery             ***
dnl *** At the moment this cannot be derived from the version number ***
dnl ********************************************************************
AC_LANG_PUSH([C])
CPPFLAGS=`$PKG_CONFIG --cflags ${INDICATOR_PKGNAME}`
AC_CHECK_HEADERS([libindicator/indicator-ng.h], [HAVE_INDICATOR_NG_H=yes], [HAVE_INDICATOR_NG_H=no])
AC_LANG_POP

dnl ****************************
dnl *** Optional IDO library ***
dnl ****************************
XDT_CHECK_OPTIONAL_PACKAGE([IDO], [libido3-0.1], [13.10.0], [ido], [IDO library])

dnl ***********************************
dnl *** Check for debugging support ***
dnl ***********************************
XDT_FEATURE_DEBUG()

dnl ***********************
dnl *** Indicator info ***
dnl ***********************
INDICATORDIR=`$PKG_CONFIG --variable=indicatordir ${INDICATOR_PKGNAME}`
INDICATORICONSDIR=`$PKG_CONFIG --variable=iconsdir ${INDICATOR_PKGNAME}`

AC_SUBST([INDICATORDIR])
AC_SUBST([INDICATORICONSDIR])

dnl **********************************************
dnl *** Optional indicator-application support ***
dnl **********************************************
AC_ARG_ENABLE([application], AC_HELP_STRING([--disable-application],
              [Disable indicator-application support]), [], [enable_application=yes])
if test x"$enable_application" == x"no"; then
        AC_DEFINE([DISABLE_APPLICATION], [], [indicator-application suport disabled])
fi

dnl *********************************
dnl *** Substitute platform flags ***
dnl *********************************
AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])

AC_OUTPUT([
Makefile
icons/Makefile
icons/48x48/Makefile
icons/scalable/Makefile
panel-plugin/Makefile
panel-plugin/indicator.desktop.in
po/Makefile.in
])

dnl ***************************
dnl *** Print configuration ***
dnl ***************************
echo
echo "Build Configuration:"
echo
echo "* Debug Support:        $enable_debug"
echo "* Application Support:  $enable_application"
echo "* Use IndicatorNg API:  $HAVE_INDICATOR_NG_H"
if test x"$IDO_FOUND" = x"yes"; then
echo "* Use IDO library:      yes"
else
echo "* Use IDO library:      no"
fi
echo
